//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Script/StateMachine/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
	public InputActionAsset asset { get; }
	public @Controls()
	{
		asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""47996b6d-d871-4c07-8504-6eedaa5b4680"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""f0f5e5cd-e53d-43cf-a3b3-5dbb6f9cb101"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""f61de639-6832-4464-aeb2-d0a534dc7c95"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""faa5af2a-b9c4-4e12-8995-69c7ca097d8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L.Attack"",
                    ""type"": ""Button"",
                    ""id"": ""f8520d70-a368-4c63-ba52-da95472c897c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R.Attack"",
                    ""type"": ""Button"",
                    ""id"": ""79146631-4d1f-406d-9a39-20e5ed4fa724"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchingAttribute"",
                    ""type"": ""Button"",
                    ""id"": ""9f8c0e93-515b-482d-be7f-db0ecbebfe6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0bbcaa6c-1d1c-43c1-8877-89ee2faad617"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07f8c6cc-d016-4de8-ad56-f71b207ce3d1"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""646b050d-8995-42eb-b37c-ecf033c85301"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""353f2a25-754f-4d28-ab46-3943f4b51e7b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""6196025d-81b1-4337-9196-00e5f65a38db"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d6e251f7-b44f-415e-a07c-98517c63988f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c6782013-4678-4574-9af8-bfe0d1b278ad"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""18903c8c-a5c1-43e0-b503-dce0a58b90a4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9a2abe15-f135-4cbf-9297-f364564e175e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""14418a03-8850-4255-a893-cbf39744e456"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""L.Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ddd6dc8-51e1-4c9a-99cc-ab234877e6ca"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""R.Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad4222d8-fbe4-4d37-9aaf-42fa3e824308"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""SwitchingAttribute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""71dfd98b-0e29-498c-9051-0dd5ae188b44"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""92d46e50-d2c8-4865-ba19-1067d33a25b0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""62dda094-b538-400b-9a34-cb476c5835df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""c7c2629b-710c-4c97-9a5b-4c0d1c6fe7a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7eab6a91-4b5b-4a3b-be23-678c823f6bd5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4790ccb0-c4da-4092-974c-eb080c43ee29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b35fde1c-9722-4816-9ed4-9d57852d43c0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cf6bf6aa-ef17-4738-a7f0-8f3c822af301"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4712644b-ae38-46f1-962d-9e2b5c0f41d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6f30b0cd-1798-4732-85e7-82ab1a9d3c35"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e17812ee-aef4-4cb0-aa0f-719bb6032748"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""d3d69307-847a-4c3f-a35a-e88ef5725ef9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""26e036b3-e686-40ec-8197-d137f430a0b8"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""623a74c9-14ff-46f4-90bd-d16e9ee2232a"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""35f4abb1-d0d0-4678-909e-ea03137f6641"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7ee2f66c-2959-43ed-9fa3-0c165bc29bb7"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4f0bf402-0336-4eaa-9c12-5740df893b92"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a5f78cc3-917d-4674-8ec3-71ddce9de06e"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e7a19ef5-cafb-4227-8d95-ebef768127aa"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b038a48a-70d3-4ebb-9342-5b52b511715f"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""81a3c490-b36d-48c0-a1f6-07b03737d052"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""254a8aa9-34b4-4e5a-81bb-7492816164cd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""398a4cc1-5d7a-490f-9cb5-890d8764e5bd"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5bbd2d23-c7ef-454e-9bab-e9c83cd62439"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ef50eaa7-593c-41b4-a356-0795f649ca2f"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f3dc032d-41a3-444c-ab37-80727a018614"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""f5a59c02-e358-4937-8653-0ebfa6682c02"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""277295eb-ac16-4c13-ac16-7d95f8334f31"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ac9e7caf-357f-4c7b-87b5-114747d34508"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f470da75-f819-4857-bd88-d06a3d9b9027"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""79debe22-641e-48be-8a55-2c3cea6ceb3a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""df2d37b2-65cd-4a27-8761-9443a75946b3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""85f57a49-5142-4f49-982a-ce8201c8ea27"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""47289871-cf45-4a5a-b38e-8cc8a8ca1c1a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""efdad3bb-fbdc-4fc0-8607-fcdfe9cec570"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0bddc641-d161-45ae-be0d-e347ec6de4e9"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR;Keyboard and Mouse"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b39124e6-d35c-4619-bb33-49e0ee7db733"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR;Keyboard and Mouse"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d23ed06-54f1-4f69-ac05-cdaaf8b17833"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f5556e6-cb7f-4364-91b0-cb969ba3ad3c"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7bc7a371-58b8-4245-aa81-bb9b6c4a8ef1"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a18620d-00c6-46f4-af0f-0b048821d1c3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d15cfb4-c201-4d56-87b8-372cd4521f28"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6981ef2d-28a6-4096-95c4-a988bdb93135"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ea362f2-2f53-4999-a502-e172b8c425a4"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3daeab85-31e3-4fd6-8041-d366ae6b298d"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d2be56c-04a4-4ade-86f8-f6112a630256"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b5d81b3-e61e-48ae-a5f0-93827384d2d2"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard and Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc03bdf1-60cf-4afd-9519-0daacc7e7918"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bd07a62-8194-4deb-a022-273644f94c3c"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard and Mouse"",
            ""bindingGroup"": ""Keyboard and Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
		// Player
		m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
		m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
		m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
		m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
		m_Player_LAttack = m_Player.FindAction("L.Attack", throwIfNotFound: true);
		m_Player_RAttack = m_Player.FindAction("R.Attack", throwIfNotFound: true);
		m_Player_SwitchingAttribute = m_Player.FindAction("SwitchingAttribute", throwIfNotFound: true);
		// UI
		m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
		m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
		m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
		m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
		m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
		m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
		m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
		m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
		m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
		m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
		m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
	}

	public void Dispose()
	{
		UnityEngine.Object.Destroy(asset);
	}

	public InputBinding? bindingMask
	{
		get => asset.bindingMask;
		set => asset.bindingMask = value;
	}

	public ReadOnlyArray<InputDevice>? devices
	{
		get => asset.devices;
		set => asset.devices = value;
	}

	public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

	public bool Contains(InputAction action)
	{
		return asset.Contains(action);
	}

	public IEnumerator<InputAction> GetEnumerator()
	{
		return asset.GetEnumerator();
	}

	IEnumerator IEnumerable.GetEnumerator()
	{
		return GetEnumerator();
	}

	public void Enable()
	{
		asset.Enable();
	}

	public void Disable()
	{
		asset.Disable();
	}

	public IEnumerable<InputBinding> bindings => asset.bindings;

	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return asset.FindAction(actionNameOrId, throwIfNotFound);
	}

	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return asset.FindBinding(bindingMask, out action);
	}

	// Player
	private readonly InputActionMap m_Player;
	private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
	private readonly InputAction m_Player_Look;
	private readonly InputAction m_Player_Move;
	private readonly InputAction m_Player_Jump;
	private readonly InputAction m_Player_LAttack;
	private readonly InputAction m_Player_RAttack;
	private readonly InputAction m_Player_SwitchingAttribute;
	public struct PlayerActions
	{
		private @Controls m_Wrapper;
		public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
		public InputAction @Look => m_Wrapper.m_Player_Look;
		public InputAction @Move => m_Wrapper.m_Player_Move;
		public InputAction @Jump => m_Wrapper.m_Player_Jump;
		public InputAction @LAttack => m_Wrapper.m_Player_LAttack;
		public InputAction @RAttack => m_Wrapper.m_Player_RAttack;
		public InputAction @SwitchingAttribute => m_Wrapper.m_Player_SwitchingAttribute;
		public InputActionMap Get() { return m_Wrapper.m_Player; }
		public void Enable() { Get().Enable(); }
		public void Disable() { Get().Disable(); }
		public bool enabled => Get().enabled;
		public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
		public void AddCallbacks(IPlayerActions instance)
		{
			if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
			m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
			@Look.started += instance.OnLook;
			@Look.performed += instance.OnLook;
			@Look.canceled += instance.OnLook;
			@Move.started += instance.OnMove;
			@Move.performed += instance.OnMove;
			@Move.canceled += instance.OnMove;
			@Jump.started += instance.OnJump;
			@Jump.performed += instance.OnJump;
			@Jump.canceled += instance.OnJump;
			@LAttack.started += instance.OnLAttackDown;
			@LAttack.performed += instance.OnLAttack;
			@LAttack.canceled += instance.OnLAttack;
			@RAttack.started += instance.OnRAttackDown;
			@RAttack.performed += instance.OnRAttack;
			@RAttack.canceled += instance.OnRAttackUp;
			@SwitchingAttribute.started += instance.OnSwitchingDown;
			@SwitchingAttribute.performed += instance.OnSwitching;
			@SwitchingAttribute.canceled += instance.OnSwitchingUp;
		}

		private void UnregisterCallbacks(IPlayerActions instance)
		{
			@Look.started -= instance.OnLook;
			@Look.performed -= instance.OnLook;
			@Look.canceled -= instance.OnLook;
			@Move.started -= instance.OnMove;
			@Move.performed -= instance.OnMove;
			@Move.canceled -= instance.OnMove;
			@Jump.started -= instance.OnJump;
			@Jump.performed -= instance.OnJump;
			@Jump.canceled -= instance.OnJump;
			@LAttack.started -= instance.OnLAttackDown;
			@LAttack.performed -= instance.OnLAttack;
			@LAttack.canceled -= instance.OnLAttack;
			@RAttack.started -= instance.OnRAttackDown;
			@RAttack.performed -= instance.OnRAttack;
			@RAttack.canceled -= instance.OnRAttackUp;
			@SwitchingAttribute.started -= instance.OnSwitchingDown;
			@SwitchingAttribute.performed -= instance.OnSwitching;
			@SwitchingAttribute.canceled -= instance.OnSwitchingUp;
		}

		public void RemoveCallbacks(IPlayerActions instance)
		{
			if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
				UnregisterCallbacks(instance);
		}

		public void SetCallbacks(IPlayerActions instance)
		{
			foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
				UnregisterCallbacks(item);
			m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
			AddCallbacks(instance);
		}
	}
	public PlayerActions @Player => new PlayerActions(this);

	// UI
	private readonly InputActionMap m_UI;
	private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
	private readonly InputAction m_UI_Navigate;
	private readonly InputAction m_UI_Submit;
	private readonly InputAction m_UI_Cancel;
	private readonly InputAction m_UI_Point;
	private readonly InputAction m_UI_Click;
	private readonly InputAction m_UI_ScrollWheel;
	private readonly InputAction m_UI_MiddleClick;
	private readonly InputAction m_UI_RightClick;
	private readonly InputAction m_UI_TrackedDevicePosition;
	private readonly InputAction m_UI_TrackedDeviceOrientation;
	public struct UIActions
	{
		private @Controls m_Wrapper;
		public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
		public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
		public InputAction @Submit => m_Wrapper.m_UI_Submit;
		public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
		public InputAction @Point => m_Wrapper.m_UI_Point;
		public InputAction @Click => m_Wrapper.m_UI_Click;
		public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
		public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
		public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
		public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
		public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
		public InputActionMap Get() { return m_Wrapper.m_UI; }
		public void Enable() { Get().Enable(); }
		public void Disable() { Get().Disable(); }
		public bool enabled => Get().enabled;
		public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
		public void AddCallbacks(IUIActions instance)
		{
			if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
			m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
			@Navigate.started += instance.OnNavigate;
			@Navigate.performed += instance.OnNavigate;
			@Navigate.canceled += instance.OnNavigate;
			@Submit.started += instance.OnSubmit;
			@Submit.performed += instance.OnSubmit;
			@Submit.canceled += instance.OnSubmit;
			@Cancel.started += instance.OnCancel;
			@Cancel.performed += instance.OnCancel;
			@Cancel.canceled += instance.OnCancel;
			@Point.started += instance.OnPoint;
			@Point.performed += instance.OnPoint;
			@Point.canceled += instance.OnPoint;
			@Click.started += instance.OnClick;
			@Click.performed += instance.OnClick;
			@Click.canceled += instance.OnClick;
			@ScrollWheel.started += instance.OnScrollWheel;
			@ScrollWheel.performed += instance.OnScrollWheel;
			@ScrollWheel.canceled += instance.OnScrollWheel;
			@MiddleClick.started += instance.OnMiddleClick;
			@MiddleClick.performed += instance.OnMiddleClick;
			@MiddleClick.canceled += instance.OnMiddleClick;
			@RightClick.started += instance.OnRightClick;
			@RightClick.performed += instance.OnRightClick;
			@RightClick.canceled += instance.OnRightClick;
			@TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
			@TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
			@TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
			@TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
			@TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
			@TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
		}

		private void UnregisterCallbacks(IUIActions instance)
		{
			@Navigate.started -= instance.OnNavigate;
			@Navigate.performed -= instance.OnNavigate;
			@Navigate.canceled -= instance.OnNavigate;
			@Submit.started -= instance.OnSubmit;
			@Submit.performed -= instance.OnSubmit;
			@Submit.canceled -= instance.OnSubmit;
			@Cancel.started -= instance.OnCancel;
			@Cancel.performed -= instance.OnCancel;
			@Cancel.canceled -= instance.OnCancel;
			@Point.started -= instance.OnPoint;
			@Point.performed -= instance.OnPoint;
			@Point.canceled -= instance.OnPoint;
			@Click.started -= instance.OnClick;
			@Click.performed -= instance.OnClick;
			@Click.canceled -= instance.OnClick;
			@ScrollWheel.started -= instance.OnScrollWheel;
			@ScrollWheel.performed -= instance.OnScrollWheel;
			@ScrollWheel.canceled -= instance.OnScrollWheel;
			@MiddleClick.started -= instance.OnMiddleClick;
			@MiddleClick.performed -= instance.OnMiddleClick;
			@MiddleClick.canceled -= instance.OnMiddleClick;
			@RightClick.started -= instance.OnRightClick;
			@RightClick.performed -= instance.OnRightClick;
			@RightClick.canceled -= instance.OnRightClick;
			@TrackedDevicePosition.started -= instance.OnTrackedDevicePosition;
			@TrackedDevicePosition.performed -= instance.OnTrackedDevicePosition;
			@TrackedDevicePosition.canceled -= instance.OnTrackedDevicePosition;
			@TrackedDeviceOrientation.started -= instance.OnTrackedDeviceOrientation;
			@TrackedDeviceOrientation.performed -= instance.OnTrackedDeviceOrientation;
			@TrackedDeviceOrientation.canceled -= instance.OnTrackedDeviceOrientation;
		}

		public void RemoveCallbacks(IUIActions instance)
		{
			if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
				UnregisterCallbacks(instance);
		}

		public void SetCallbacks(IUIActions instance)
		{
			foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
				UnregisterCallbacks(item);
			m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
			AddCallbacks(instance);
		}
	}
	public UIActions @UI => new UIActions(this);
	private int m_GamepadSchemeIndex = -1;
	public InputControlScheme GamepadScheme
	{
		get
		{
			if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
			return asset.controlSchemes[m_GamepadSchemeIndex];
		}
	}
	private int m_KeyboardandMouseSchemeIndex = -1;
	public InputControlScheme KeyboardandMouseScheme
	{
		get
		{
			if (m_KeyboardandMouseSchemeIndex == -1) m_KeyboardandMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard and Mouse");
			return asset.controlSchemes[m_KeyboardandMouseSchemeIndex];
		}
	}
	public interface IPlayerActions
	{
		void OnLook(InputAction.CallbackContext context);
		void OnMove(InputAction.CallbackContext context);
		void OnJump(InputAction.CallbackContext context);
		void OnLAttack(InputAction.CallbackContext context);
		void OnLAttackDown(InputAction.CallbackContext context);
		void OnRAttackDown(InputAction.CallbackContext context);
		void OnRAttack(InputAction.CallbackContext context);
		void OnRAttackUp(InputAction.CallbackContext context);
		void OnSwitchingDown(InputAction.CallbackContext context);
		void OnSwitching(InputAction.CallbackContext context);
		void OnSwitchingUp(InputAction.CallbackContext context);
	}
	public interface IUIActions
	{
		void OnNavigate(InputAction.CallbackContext context);
		void OnSubmit(InputAction.CallbackContext context);
		void OnCancel(InputAction.CallbackContext context);
		void OnPoint(InputAction.CallbackContext context);
		void OnClick(InputAction.CallbackContext context);
		void OnScrollWheel(InputAction.CallbackContext context);
		void OnMiddleClick(InputAction.CallbackContext context);
		void OnRightClick(InputAction.CallbackContext context);
		void OnTrackedDevicePosition(InputAction.CallbackContext context);
		void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
	}
}
